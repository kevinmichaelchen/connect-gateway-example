{
  "swagger": "2.0",
  "info": {
    "title": "users/v1/users.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/user/{user.id}": {
      "patch": {
        "summary": "Update a user.",
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "description": "Id uniquely identifies a user. Output only.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "description": "The user to update, along with its new fields.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address."
                },
                "create_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Output only.",
                  "readOnly": true
                },
                "first_name": {
                  "type": "string",
                  "description": "First name."
                },
                "last_name": {
                  "type": "string",
                  "description": "Last name."
                }
              },
              "title": "The user to update, along with its new fields."
            }
          },
          {
            "name": "update_mask",
            "description": "A field mask specifying which fields to update.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "List users.",
        "operationId": "UserService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1User"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "summary": "Create a new user.",
        "operationId": "UserService_AddUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Get a user's details.",
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The ID to lookup the user by.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddUserRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "The new user's email address."
        }
      },
      "description": "Request to create a new user."
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id uniquely identifies a user. Output only.",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "description": "Email address."
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "description": "Output only.",
          "readOnly": true
        },
        "first_name": {
          "type": "string",
          "description": "First name."
        },
        "last_name": {
          "type": "string",
          "description": "Last name."
        }
      },
      "description": "A user."
    }
  }
}
